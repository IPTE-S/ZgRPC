// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: persona.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ZgRPC {
  public static partial class PersonaService
  {
    static readonly string __ServiceName = "ZgRPC.PersonaService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.PersonaRequest> __Marshaller_ZgRPC_PersonaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.PersonaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.PersonaResponse> __Marshaller_ZgRPC_PersonaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.PersonaResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.ServerMultiplePersonaRequest> __Marshaller_ZgRPC_ServerMultiplePersonaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.ServerMultiplePersonaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.ServerMultiplePersonaResponse> __Marshaller_ZgRPC_ServerMultiplePersonaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.ServerMultiplePersonaResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.ClientMultiplePersonaRequest> __Marshaller_ZgRPC_ClientMultiplePersonaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.ClientMultiplePersonaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.ClientMultiplePersonaResponse> __Marshaller_ZgRPC_ClientMultiplePersonaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.ClientMultiplePersonaResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.BidereccionalPersonaRequest> __Marshaller_ZgRPC_BidereccionalPersonaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.BidereccionalPersonaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ZgRPC.BidereccionalPersonaResponse> __Marshaller_ZgRPC_BidereccionalPersonaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ZgRPC.BidereccionalPersonaResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ZgRPC.PersonaRequest, global::ZgRPC.PersonaResponse> __Method_RegistrarPersona = new grpc::Method<global::ZgRPC.PersonaRequest, global::ZgRPC.PersonaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegistrarPersona",
        __Marshaller_ZgRPC_PersonaRequest,
        __Marshaller_ZgRPC_PersonaResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ZgRPC.ServerMultiplePersonaRequest, global::ZgRPC.ServerMultiplePersonaResponse> __Method_RegistrarPersonasServidorMultiple = new grpc::Method<global::ZgRPC.ServerMultiplePersonaRequest, global::ZgRPC.ServerMultiplePersonaResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "RegistrarPersonasServidorMultiple",
        __Marshaller_ZgRPC_ServerMultiplePersonaRequest,
        __Marshaller_ZgRPC_ServerMultiplePersonaResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ZgRPC.ClientMultiplePersonaRequest, global::ZgRPC.ClientMultiplePersonaResponse> __Method_RegistrarPersonaClientMultiple = new grpc::Method<global::ZgRPC.ClientMultiplePersonaRequest, global::ZgRPC.ClientMultiplePersonaResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "RegistrarPersonaClientMultiple",
        __Marshaller_ZgRPC_ClientMultiplePersonaRequest,
        __Marshaller_ZgRPC_ClientMultiplePersonaResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ZgRPC.BidereccionalPersonaRequest, global::ZgRPC.BidereccionalPersonaResponse> __Method_RegistrarPersonaBidirecional = new grpc::Method<global::ZgRPC.BidereccionalPersonaRequest, global::ZgRPC.BidereccionalPersonaResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "RegistrarPersonaBidirecional",
        __Marshaller_ZgRPC_BidereccionalPersonaRequest,
        __Marshaller_ZgRPC_BidereccionalPersonaResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ZgRPC.PersonaReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PersonaService</summary>
    [grpc::BindServiceMethod(typeof(PersonaService), "BindService")]
    public abstract partial class PersonaServiceBase
    {
      /// <summary>
      ///gRPC Unary
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ZgRPC.PersonaResponse> RegistrarPersona(global::ZgRPC.PersonaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task RegistrarPersonasServidorMultiple(global::ZgRPC.ServerMultiplePersonaRequest request, grpc::IServerStreamWriter<global::ZgRPC.ServerMultiplePersonaResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ZgRPC.ClientMultiplePersonaResponse> RegistrarPersonaClientMultiple(grpc::IAsyncStreamReader<global::ZgRPC.ClientMultiplePersonaRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task RegistrarPersonaBidirecional(grpc::IAsyncStreamReader<global::ZgRPC.BidereccionalPersonaRequest> requestStream, grpc::IServerStreamWriter<global::ZgRPC.BidereccionalPersonaResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PersonaService</summary>
    public partial class PersonaServiceClient : grpc::ClientBase<PersonaServiceClient>
    {
      /// <summary>Creates a new client for PersonaService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PersonaServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PersonaService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PersonaServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PersonaServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PersonaServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///gRPC Unary
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ZgRPC.PersonaResponse RegistrarPersona(global::ZgRPC.PersonaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegistrarPersona(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///gRPC Unary
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ZgRPC.PersonaResponse RegistrarPersona(global::ZgRPC.PersonaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegistrarPersona, null, options, request);
      }
      /// <summary>
      ///gRPC Unary
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ZgRPC.PersonaResponse> RegistrarPersonaAsync(global::ZgRPC.PersonaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegistrarPersonaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///gRPC Unary
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ZgRPC.PersonaResponse> RegistrarPersonaAsync(global::ZgRPC.PersonaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegistrarPersona, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::ZgRPC.ServerMultiplePersonaResponse> RegistrarPersonasServidorMultiple(global::ZgRPC.ServerMultiplePersonaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegistrarPersonasServidorMultiple(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::ZgRPC.ServerMultiplePersonaResponse> RegistrarPersonasServidorMultiple(global::ZgRPC.ServerMultiplePersonaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_RegistrarPersonasServidorMultiple, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::ZgRPC.ClientMultiplePersonaRequest, global::ZgRPC.ClientMultiplePersonaResponse> RegistrarPersonaClientMultiple(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegistrarPersonaClientMultiple(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::ZgRPC.ClientMultiplePersonaRequest, global::ZgRPC.ClientMultiplePersonaResponse> RegistrarPersonaClientMultiple(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_RegistrarPersonaClientMultiple, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::ZgRPC.BidereccionalPersonaRequest, global::ZgRPC.BidereccionalPersonaResponse> RegistrarPersonaBidirecional(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegistrarPersonaBidirecional(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::ZgRPC.BidereccionalPersonaRequest, global::ZgRPC.BidereccionalPersonaResponse> RegistrarPersonaBidirecional(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_RegistrarPersonaBidirecional, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override PersonaServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PersonaServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(PersonaServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RegistrarPersona, serviceImpl.RegistrarPersona)
          .AddMethod(__Method_RegistrarPersonasServidorMultiple, serviceImpl.RegistrarPersonasServidorMultiple)
          .AddMethod(__Method_RegistrarPersonaClientMultiple, serviceImpl.RegistrarPersonaClientMultiple)
          .AddMethod(__Method_RegistrarPersonaBidirecional, serviceImpl.RegistrarPersonaBidirecional).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PersonaServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RegistrarPersona, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ZgRPC.PersonaRequest, global::ZgRPC.PersonaResponse>(serviceImpl.RegistrarPersona));
      serviceBinder.AddMethod(__Method_RegistrarPersonasServidorMultiple, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::ZgRPC.ServerMultiplePersonaRequest, global::ZgRPC.ServerMultiplePersonaResponse>(serviceImpl.RegistrarPersonasServidorMultiple));
      serviceBinder.AddMethod(__Method_RegistrarPersonaClientMultiple, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::ZgRPC.ClientMultiplePersonaRequest, global::ZgRPC.ClientMultiplePersonaResponse>(serviceImpl.RegistrarPersonaClientMultiple));
      serviceBinder.AddMethod(__Method_RegistrarPersonaBidirecional, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::ZgRPC.BidereccionalPersonaRequest, global::ZgRPC.BidereccionalPersonaResponse>(serviceImpl.RegistrarPersonaBidirecional));
    }

  }
}
#endregion
